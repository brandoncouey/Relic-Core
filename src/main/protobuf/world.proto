syntax = "proto3";
package shattered.protocol;
option java_package = "com.shattered.networking.proto";
option cc_enable_arenas = true;


message TransformUpdate {
    float transformX = 1;
    float transformY = 2;
    float transformZ = 3;
    float rotationZ = 4;
}

message Velocity {
    int32 valueX = 1;
    int32 valueY = 2;
    int32 valueZ = 3;
}

message CharacterTransformUpdate {
    TransformUpdate transform = 1;
    Velocity velocity = 2;
    float lookRoll = 3;
    float lookYaw = 4;
    bool inAir = 5;
}


message CharacterModelBlock {

    string characterName = 1;
    bool isMale = 2;

    int32 headSlotId = 3;
    int32 necklaceSlotId = 4;
    int32 shouldersSlotId = 5;
    int32 backSlotId = 6;
    int32 chestSlotId = 7;
    int32 beltSlotId = 8;
    int32 pantsSlotId = 9;
    int32 wristSlotId = 10;
    int32 glovesSlotId = 11;
    int32 mainHandSlotId = 12;
    int32 offHandSlotId = 13;
    int32 bootsSlotId = 14;

}

message CharacterSynchronize {
    message LocalCharacter {
        int32 characterIndex = 1;
        int32 flags = 2;
        CharacterModelBlock model = 3;
        CharacterTransformUpdate transform = 4;
        int32 interactFlags = 5;
        int32 animSequenceId = 6;
        bool needsAdded = 7;
        bool needsRemoved = 8;
    }
    int32 clientIndex = 1;
    repeated LocalCharacter localCharacter = 2;
}


message NPCSynchronize {
    message LocalNPC {
        int32 npcIndex = 1;
        int32 npcId = 2;
        int32 flags = 3;
        string npcName = 4;
        int32 health = 5;
        int32 transformX = 6;
        int32 transformY = 7;
        int32 transformZ = 8;
        int32 rotationZ = 9;
        int32 animSequenceId = 10;
        int32 interactFlags = 11;
        bool needsAdded = 12;
        bool needsRemoved = 13;
    }
    repeated LocalNPC localNpc = 1;
}

message ObjectSynchronize {
    message LocalObject {
        int32 objectIndex = 1;
        int32 objectId = 2;
        int32 flags = 3;
        string objectName = 4;
        int32 transformX = 5;
        int32 transformY = 6;
        int32 transformZ = 7;
        int32 rotationZ = 8;
        int32 interactFlags = 9;
        bool needsAdded = 10;
        bool needsRemoved = 11;
    }
    repeated LocalObject localObject = 1;
}

message CharVarInt {
    int32 id = 1;
    int32 value = 2;
}

message CharVarString {
    int32 id = 1;
    string value = 2;
}

message ChatRequestMessage {
    int32 type = 1;
    string message = 2;
}

message GameMessage {
    int32 type = 1;
    string message = 2;
}

message ChannelMessage {
    int32 type = 1;
    int32 fromIndex = 2;
    string fromName = 3;
    string message = 4;
    int32 permissionLevel = 5;
}

message SendPrivateMessage {
    string to = 1;
    string message = 2;
}

message ReceivePrivateMessage {
    string from = 1;
    string message = 2;
    int32 permissionLevel = 3;
}

message ActorInteraction {
    int32 id = 1;
    int32 index = 2;
    int32 modifier = 3;
    TransformUpdate transform = 4;//optional this is if the index = -1 (client-spawned interactable actors)
}

message StructWidget {
    string widgetName = 1;
}

message MixedContainerSlot {
    bool isItem = 1;
    AbilitySlot ability = 2;
    ItemSlot item = 3;
}

message AbilitySlot {
    int32 slotId = 1;
    int32 id = 2;
}

message ItemSlot {
    int32 slotId = 1;
    int32 id = 2;
    int32 amount = 3;
}

message UpdateActionBarSlot {
    int32 slotId = 1;
    int32 id = 2;
}

message UpdateItemContainerFull {
    int32 containerId = 1;
    repeated ItemSlot ItemSlot = 2;
}

message UpdateItemContainerSlot {
    int32 containerId = 1;
    ItemSlot ItemSlot = 2;
}

message UpdateMixedContainerFull {
    int32 containerId = 1;
    repeated MixedContainerSlot mixedSlot = 2;
}

message ShiftContainerSlot {
    int32 containerId = 1;
    int32 fromSlotId = 2;
    int32 toSlotId = 3;
    int32 itemId = 4;
}

message ShiftContainerSlotToWidget {
    int32 fromContainerId = 1;
    int32 toContainerId = 2;
    int32 fromSlotId = 3;
    int32 toSlotId = 4;
    int32 id = 5;
}

message UseContainerSlot {
    int32 containerId = 1;
    int32 slotId = 2;
    int32 itemId = 3;
}

message SendSimpleDialogMessage {
    int32 npcId = 1;
    string message = 2;
}


message RequestCAbility {
    int32 abilityId = 1;
}

message StartCAbility {
    int32 abilityId = 1;
}

//TODO possibility, add the origin hit?
message CAbilityActorHit {
    int32 projectileUuid = 1;
    int32 npcIndex = 2;
}

message SpawnProjectile {
    int32 uuid = 1;
    TransformUpdate transform = 2;
    int32 speed = 3;
    int32 duration = 4;
}

message SpawnEmitter {
    int32 emitterId = 1;
    TransformUpdate transform = 2;
}

message SingleDialog {
    string message = 1;
    string buttonMessage = 2;
}

message MultiOptionDialog {
    string message = 1;
    repeated string buttonMessage = 2;
}

message DialogOption {
    int32 optionId = 1;
}

message PlaySoundCue {
    int32 cueId = 1;
    float volume = 2;
}

message SetMarkerOnNPC {
    int32 npcIndex = 1;
    int32 markerType = 2;
}

message UpdateMarkerOnNPC {
    int32 npcIndex = 1;
    int32 markerType = 2;
}

message RemoveMarkerOnNPC {
    int32 npcIndex = 1;
}

message SetMarkerOnObject {
    int32 npcIndex = 1;
    int32 markerType = 2;
}

message UpdateMarkerOnObject {
    int32 npcIndex = 1;
    int32 markerType = 2;
}

message RemoveMarkerOnObject {
    int32 npcIndex = 1;
}

message SetMarkerOnCharacter {
    int32 npcIndex = 1;
    int32 markerType = 2;
}

message UpdateMarkerOnCharacter {
    int32 npcIndex = 1;
    int32 markerType = 2;
}

message RemoveMarkerOnCharacter {
    int32 npcIndex = 1;
}

message DisplayGlobalNotification {
    string typeText = 1;
    string headlineText = 2;
}

message DisplayGuideMessage {
    string rowOneText = 1;
    int32 rowOneSpriteId = 2;
    string rowTwoText = 3;
    int32 rowTwoSpriteId = 4;
}

message DisplayQuestNotification {
    int32 spriteId = 1;
    int32 type = 2;
    string headline = 3;
    string info = 4;
}

message DisplayAcquiredNotification {
    int32 spriteId = 1;
    string headline = 2;
    int32 amount = 3;
}

message DisplayUnlockedNotification {
    int32 spriteId = 1;
    string headline = 2;
    string info = 3;
}

